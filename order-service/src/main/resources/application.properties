spring.application.name=order-service
server.port=8082
server.shutdown=graceful

######## Order Service Configuration  #########
orders.catalog-service-url=http://localhost:8081
orders.order-events-exchange=orders-exchange
orders.new-orders-queue=new-orders
orders.delivered-orders-queue=delivered-orders
orders.cancelled-orders-queue=cancelled-orders
orders.error-orders-queue=error-orders

orders.publish-order-events-job-cron=*/5 * * * * *
orders.new-orders-job-cron=*/10 * * * * *

######## Actuator Configurations  #########
management.info.git.mode=full
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}
management.tracing.enabled=false
management.tracing.sampling.probability=1.0

######### Swagger Configuration  #########
swagger.api-gateway-url=http://localhost:8989/orders

####### OAuth2 Configuration  #########
OAUTH2_SERVER_URL=http://localhost:9191
REALM_URL=${OAUTH2_SERVER_URL}/realms/bookstore
spring.security.oauth2.resourceserver.jwt.issuer-uri=${REALM_URL}

######## Database Configuration  #########
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:25432/postgres}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.jpa.open-in-view=false
spring.jpa.show-sql=true

######## RabbitMQ Configuration  #########
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

## Resilience4j Configuration : Max Hits are 2 times, with wait duration of 1 seconds during each 2 attempts
resilience4j.retry.backends.catalog-service.max-attempts=2
resilience4j.retry.backends.catalog-service.wait-duration=1s

resilience4j.circuitbreaker.backends.catalog-service.sliding-window-type=COUNT_BASED
#Calculate failiure rate based on count of calls
resilience4j.circuitbreaker.backends.catalog-service.sliding-window-size=6
#Determine based on last 6 calls
resilience4j.circuitbreaker.backends.catalog-service.minimum-number-of-calls=4
#min 4  calls to see the diff
resilience4j.circuitbreaker.backends.catalog-service.wait-duration-in-open-state=20s
#When failure occured, now CirBreaker is in OPEN state, if now checks how many seconds it needs to wait
resilience4j.circuitbreaker.backends.catalog-service.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.backends.catalog-service.failure-rate-threshold=50
#failure rate thresold to 50 percent
